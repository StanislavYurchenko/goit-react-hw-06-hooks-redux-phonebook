{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/PhoneBook/PhoneBook.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/phoneBook/phoneBook-actions.js","redux/phoneBook/phoneBook-reducer.js","redux/store.js","redux/phoneBook/phoneBook-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/PhoneBook/PhoneBook.js","components/App/App.js","index.js","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","removeContactById","createAction","addContact","onChangeFilter","contactsReducer","createReducer","actions","state","payload","filter","id","filterReducer","_","action","combineReducers","contacts","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","store","configureStore","reducer","phoneBook","persistReducer","phoneBookReducer","devTools","process","persistor","persistStore","getContacts","getFilter","getFilteredContacts","contact","name","toLowerCase","trim","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","onChange","event","target","value","toast","error","reset","onSubmit","preventDefault","normalizedName","some","isExistContact","uuidv4","className","styles","input","type","Filter","description","ContactListItem","onClick","ContactList","filteredContacts","map","PhoneBook","container","title","length","autoClose","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.77727483.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__1x5pu\",\"remove-btn\":\"ContactForm_remove-btn__B8NPZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBook_container__2oTPt\",\"title\":\"PhoneBook_title__1DOqt\",\"sub-title\":\"PhoneBook_sub-title__lD2s3 PhoneBook_title__1DOqt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Filter_description__2xIuT\",\"input\":\"Filter_input__VYAtC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1sv4r\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const removeContactById = createAction('phoneBook/removeContactById');\nexport const addContact = createAction('phoneBook/addContact');\nexport const onChangeFilter = createAction('phoneBook/onChangeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './phoneBook-actions';\n\nconst contactsReducer = createReducer([], {\n  [actions.removeContactById]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n});\n\nconst filterReducer = createReducer('', {\n  [actions.onChangeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\r\nimport {\r\n  persistReducer,\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware =\r\n  process.env.NODE_ENV === 'development'\r\n    ? [\r\n        ...getDefaultMiddleware({\r\n          serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n          },\r\n        }),\r\n        logger,\r\n      ]\r\n    : getDefaultMiddleware;\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phoneBook: persistReducer(contactsPersistConfig, phoneBookReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","export const getContacts = state => state.phoneBook.contacts;\r\nexport const getFilter = state => state.phoneBook.filter;\r\n\r\nexport const getFilteredContacts = state => {\r\n  const filter = getFilter(state);\r\n  const contacts = getContacts(state);\r\n\r\n  return filter\r\n    ? contacts.filter(contact =>\r\n        contact.name.toLowerCase().trim().includes(filter.toLowerCase().trim()),\r\n      )\r\n    : contacts;\r\n};\r\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/phoneBook/phoneBook-actions';\nimport { toast } from 'react-toastify';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getContacts } from '../../redux/phoneBook/phoneBook-selectors';\nimport styles from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        toast.error(`There are no type input \"${name}\"`);\n    }\n  };\n\n  const isExistContact = name => {\n    return contacts.some(contact => contact.name === name);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    const normalizedName = name.trim();\n    if (isExistContact(name)) {\n      return toast.error(`\"${normalizedName}\" contact already exists`);\n    }\n    if (!normalizedName) {\n      return toast.error('Enter contact name');\n    }\n    dispatch(addContact({ name: normalizedName, number, id: uuidv4() }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <h3>Name</h3>\n      <input\n        className={styles.input}\n        name=\"name\"\n        value={name}\n        onChange={onChange}\n        type=\"text\"\n      />\n\n      <h3>Number</h3>\n      <input\n        className={styles.input}\n        name=\"number\"\n        value={number}\n        onChange={onChange}\n        type=\"number\"\n      />\n\n      <button className={styles['remove-btn']} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { onChangeFilter } from '../../redux/phoneBook/phoneBook-actions';\nimport { getFilter } from '../../redux/phoneBook/phoneBook-selectors';\nimport styles from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div className={styles.description}>Find contacts by name</div>\n      <input\n        className={styles.input}\n        onChange={event => dispatch(onChangeFilter(event.target.value))}\n        value={filter}\n        name=\"filter\"\n        type=\"text\"\n      />\n    </>\n  );\n}\n\nexport default Filter;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { removeContactById } from '../../redux/phoneBook/phoneBook-actions';\nimport PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\n\nfunction ContactListItem({ contact }) {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={styles.contact}>\n      <div>\n        <span className={styles['contact-name']}>{contact.name}:</span>\n        <span className={styles['contact-number']}>{contact.number}</span>\n      </div>\n\n      <button\n        className={styles['remove-btn']}\n        onClick={() => dispatch(removeContactById(contact.id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string,\n  }),\n};\n\nexport default ContactListItem;\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport { getFilteredContacts } from '../../redux/phoneBook/phoneBook-selectors';\r\nimport styles from './ContactList.module.css';\r\n\r\nfunction ContactList() {\r\n  const filteredContacts = useSelector(getFilteredContacts);\r\n  return (\r\n    <>\r\n      <ul className={styles.contacts}>\r\n        {filteredContacts.map(contact => (\r\n          <ContactListItem key={contact.id} contact={contact} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/phoneBook/phoneBook-selectors';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport styles from './PhoneBook.module.css';\n\nfunction PhoneBook() {\n  const contacts = useSelector(getContacts);\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Phone book</h1>\n      <ContactForm />\n\n      {contacts?.length > 0 && (\n        <>\n          <h2 className={styles['sub-title']}>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n\n      <ToastContainer autoClose={2000} />\n    </div>\n  );\n}\n\nexport default PhoneBook;\n","import React from 'react';\nimport PhoneBook from '../PhoneBook/PhoneBook';\n\nfunction App() {\n  return <PhoneBook />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor} />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactListItem_contact__3gglQ\",\"contact-name\":\"ContactListItem_contact-name__1uDe3\",\"contact-number\":\"ContactListItem_contact-number__5jYsp\",\"remove-btn\":\"ContactListItem_remove-btn__xdOrG\"};"],"sourceRoot":""}